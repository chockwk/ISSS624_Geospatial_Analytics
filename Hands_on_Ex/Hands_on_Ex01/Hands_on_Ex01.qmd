---
title: "1 Geospatial Data Wrangling with R"
author: "Wan Kee"
date: "15 November 2023"
date modified: "18 November 2023"
format: html
execute: 
  echo: true
  eval: true
  warning: false
editor: visual
---

## 1.1 Overview

In this Hands_on_Ex01, we will handle geospatial data in R using two packages, namely tidyverse and sf.

**Learning Objectives:**

1.  xx
2.  xx

## 1.2 Load packages

*Tidyverse* contains and installs a number of packages commonly used in data analysis, such as *ggplot2* to create declarative graphics, *dplyr* to manipulate data, *tidyr* to organize data in a consistent form, *readr* to parse rectangular data, and other packages. More information can be found [here](https://www.tidyverse.org/packages/).

*sf* provides a set of tools and a standardized way to encode geospatial vectors in the form of points, lines, polygons, etc. It binds to *GDAL* to read and write data, *GEOS* for geometrical operations, and *PROJ* for projection conversions and datum transformations. More information can be found [here](https://r-spatial.github.io/sf/).

```{r}
pacman::p_load(sf, tidyverse)
```

## 1.3 Import geospatial data

Before we begin, let's understand the geospatial file formats. KML, SHP, and GeoJSON are file formats commonly used in Geographic Information System (GIS) and mapping applications to represent and store geospatial data. Each format serves a specific purpose and has its own characteristics.

-   KML (Keyhole Markup Language) is an XML-based file format developed for use with Google Earth. It is widely supported by various GIS and mapping software. KML files can contain a variety of geospatial data, including points, lines, polygons, images, and text annotations.

-   SHP (Shapefile) is a widely used industry-standard geospatial vector data format used by GIS softwares, such as ESRI ArcGIS and QGIS. Shapefiles consist of multiple files with different extensions (.shp, .shx, .dbf, etc.) that together represent vector features, including points, lines, and polygons. Shapefiles are versatile and support for attribute data, making them suitable for a wide range of GIS applications.

-   GeoJSON (Geographic JavaScript Object Notation) is an open and lightweight format for encoding geospatial data in a JSON (JavaScript Object Notation) format. It is easy for both humans and machines to read and write. GeoJSON supports various types of geospatial features, including points, lines, polygons, and multi-geometry collections. It is commonly used in web mapping applications and can be easily integrated with JavaScript and other programming languages. GeoJSON is a format for encoding a variety of geographic data structures.

Next, we have three geospatial datasets in various data file formats.

**Dataset 1: Master Plan 2014 Subzone Boundary (`mpsz`)**

The Master Plan is a forward looking guiding plan for Singapore's development in the medium term over the next 10 to 15 years. To facilitate urban planning, the Urban Redevelopment Authority (URA) divides Singapore into regions, planning areas and subzones. Subzones are divisions within a planning area which are usually centred around a focal point such as neighbourhood centre or activity node.

Source: URA (Download [here](https://beta.data.gov.sg/collections/1708/view))

![](images/Screenshot%202023-11-19%20at%2012.43.30%E2%80%AFAM.png){width="550"}

```{r}
mpsz = st_read(dsn="data/geospatial", layer="MP14_SUBZONE_WEB_PL")
```

The output indicates that the geospatial objects are multipolygon features. There are 323 features and 15 fields. It is in svy21 projected coordinates system with XY dimension.

**Dataset 2: Pre-schools Location (`preschool`)**

The data contains the location of pre-schools, including childcare centres and kindergartens, in Singapore.

Source: ECDA (Download [here](https://beta.data.gov.sg/collections/2064/view))

![](images/Screenshot%202023-11-19%20at%2012.42.16%E2%80%AFAM.png){width="550"}

```{r}
preschool = st_read("data/geospatial/PreSchoolsLocation.kml")
```

The output indicates that the geospatial objects are point features. There are 2290 features and 2 fields. It is in wgs84 projected coordinates system with XYZ dimension.

**Dataset 3: Cycling Path (`cyclingpath`)**

The data contains an intra-town path designated for cyclists represented by line. Note the data excludes park connectors.

Source: LTA (Download [here](https://datamall.lta.gov.sg/content/datamall/en/search_datasets.html))

![](images/Screenshot%202023-11-19%20at%2012.54.09%E2%80%AFAM.png){width="550"}

```{r}
cyclingpath = st_read(dsn="data/geospatial", layer="CyclingPathGazette")
```

The output indicates that the geospatial objects are multilinestring features. There are 2558 features and 2 fields. It is in svy21 projected coordinates system with XY dimension.

## 1.4 Explore data

### 1.4.1 st_geometry()

`st_geometry()` `st_set_geometry()` `st_drop_geometry()` can get, set, replace or rename geometry from an sf object. For this exercise, we will use `st_geometry()` to display basic information of the feature class, such as type of geometry, the geographic extent of the features and the coordinate system of the data.

`mpsz` contains a column `geometry` where it indicates the object is a multipolygon in XY dimension.

```{r}
st_geometry(mpsz)
```

A multipolygon represent areas (polygons), typically complex ones with areas/holes inside, or consisting of multiple disjoint parts. Here is an example of a multipolygon and an object within the column `geometry` where its relations are represented as ((X~1~,Y~1~), (X~2~,Y~2~),..).

![](images/Screenshot%202023-11-19%20at%2011.54.56%E2%80%AFAM.png){width="300"}

```{r}
mpsz[[16]][[1]]
```

`preschool` contains a column `geometry` where it indicates the object is a point z in XYZ dimension. The statistics reveal zmin and zmax as zero and the observation is confirmed by a visual check of the data.

```{r}
st_geometry(preschool)
```

`cyclingpath` contains a column `geometry` where it indicates the object is a multilinestring in XY dimension.

```{r}
st_geometry(cyclingpath)
```

A multilinestring represent one ground feature made of one or multiple line strings. Here is an example of multilinestring and two objects where they consist of 2 and 5 lines and are represented as ((X~1~ Y~1~, X~2~ Y~2~, ...)) within the column `geometry` .

![](images/Screenshot%202023-11-19%20at%2012.15.39%E2%80%AFPM.png){width="300"}

```{r}
cyclingpath[[3]][[1]]
cyclingpath[[3]][[46]]
```

## 

### 1.4.2 glimpse()

```{r}
glimpse(mpsz)
```

```{r}
glimpse(preschool)
```

```{r}
glimpse(cyclingpath)
```

### 1.4.3 head()

```{r}
head(mpsz, n=5)
```

```{r}
head(preschool, n=5)
```

```{r}
head(cyclingpath, n=5)
```

## 1.5 Plot geospatial data

### 1.5.1 plot()

```{r}
plot(mpsz)
```

```{r}
plot(st_geometry(mpsz))
```

```{r}
plot(mpsz["PLN_AREA_N"])
```

## 1.6 Map coordinate reference systems (CRS)

```{r}
st_crs(mpsz)
```
