---
title: "Calibrate Spatial Interaction Models"
author: "Wan Kee"
date: "9 December 2023"
date modified: "13 December 2023"
format: html
execute: 
  echo: true
  eval: true
  warning: false
editor: source
---


# 1. Overview

Learning Objectives:

1. Calibrate Spatial Interaction Models by using propulsiveness and attractiveness variables

# 2. Load packages

The analysis involves the following packages:

-   `sf` imports and handles geospatial data
-   `DT` enables R data objects (matrices or data frames) to be displayed as tables on HTML pages.
-   `tidyverse` performs aspatial data import, wrangling and visualization
-   `spdep` compute spatial weights and spatially lagged variables
-   `spfep` compute spatial autocorrelation
-   `mapview` and `tmap` supports data visualisation
-   `performance` for computing model comparison matrices such as rmse
-   `ggpubr` for creating publication quality statistical graphics


```{r}
pacman::p_load(sf, sp, DT, gridExtra, knitr, mapview, spdep, sfdep, tmap, tidyverse, performance, ggpubr)
```


# 3. Import data

`flow_data_tidy.rds` contains weekday morning peak passenger flows at planning subzone level.


```{r}
flow_data <- read_rds("data/rds/flow_data_tidy.rds")
glimpse(flow_data)
```

Display the first five columns and rows of `flow_data`:
The table shows intra-zonal flow.


```{r}
kable(head(flow_data[, 1:5], n = 5))
```


# 4. Prepare data

Remove intra-zonal flow from `flow_data`

Create two new columns `FlowNoIntra` and `offset` where all intra-zonal flow will be given a value of 0 or else the original flow values will be inserted.

```{r}
flow_data$FlowNoIntra <- ifelse(
  flow_data$ORIGIN_SZ == flow_data$DESTIN_SZ,
  0,
  flow_data$MORNING_PEAK)

flow_data$offset <- ifelse(
  flow_data$ORIGIN_SZ == flow_data$DESTIN_SZ,
  0.000001,
  1)
```


Inter-zonal flow will be selected from flow_data and save into a new output data.frame `inter_zonal_flow` where `FlowNoIntra` is more than 0. 


```{r}
inter_zonal_flow <- flow_data %>% 
  filter(FlowNoIntra>0)
```


# 5. Calibrate Spatial Interaction Models

## Origin (Production) Constrained Model

For origin-constrained model, only explanatory variables representing the attractiveness at the destinations will be used. All the explanatory variables including distance will be log transformed.

ORIGIN_SZ is used to model ùúáùëñ . It must be in categorical data type.

It is important to note that -1 is added in the equation after the distance variable. The -1 serves the purpose of removing the intercept that by default, glm will insert into the model.


```{r}
orcSIM_Poisson <- glm(formula = MORNING_PEAK ~ 
                ORIGIN_SZ +
                log(SCHOOL_COUNT) +
                log(RETAIL_COUNT) +
                log(dist) - 1,
              family = poisson(link = "log"),
              data = inter_zonal_flow,
              na.action = na.exclude)
summary(orcSIM_Poisson)
```

The output shows that the ‚ç∫1 and ‚ç∫2 of SCHOOL_COUNT and BUSINESS_COUNT are 0.4755516 and 0.1796905 respectively and the distance decay parameter ùõΩ is -1.6929522.

log(DIST) must be negative where people are not willing to travel to show distance decay.
log(SCHOOL_COUNT) and log(RETAIL_COUNT) should be positive and p-value less than 0.05 to be statistically significant.

Goodness-of-fit

Define a function to calculate R2.


```{r}
CalcRSquared = function(observed, estimated){
  r = cor(observed, estimated)
  R2 = r^2
  R2
}
```

```{r}
CalcRSquared(orcSIM_Poisson$data$MORNING_PEAK, orcSIM_Poisson$fitted.values)
```

With reference to the R-Squared above, we can conclude that the model accounts for about **44% of the variation of flows** in the systems. 

## Doubly Constrained Model


```{r}
dbcSIM_Poisson <- glm(formula = MORNING_PEAK ~ ORIGIN_SZ + DESTIN_SZ + log(dist),
                      family = poisson(link = "log"),
                      data = inter_zonal_flow,
                      na.action = na.exclude)
summary(dbcSIM_Poisson)
```


Doubly constrained does not have -1 for log(DIST) where there is no interaction. The log(dist) -1 which means that an intercept will appear in the model again. This is not because I want an intercept as it makes the origin and destination coefficients harder to interpret, rather the -1 cheat for removing the intercept only works with one factor level but in double-constrained model we have two factor levels, namely: origins and destinations.


```{r}
CalcRSquared(dbcSIM_Poisson$data$MORNING_PEAK, dbcSIM_Poisson$fitted.values)
```


6. Model Comparison


```{r}
model_list2 <- list(
  Origin_Constrained = orcSIM_Poisson,
  Doubly_Constrained = dbcSIM_Poisson)
```

```{r}
compare_performance(model_list2,
                    metrics = "RMSE")
```

The output reveals that **doubly constrained SIM is the best model** among the two SIMs because it has the smallest RMSE value of 1906.694.

# 6. Visualising fitted values

Extract the fitted values from SIM and append the fitted values into inter_zonal_flow data frame.

:::panel-tabset

## Origin (Production) Constrained Model

```{r}
df <- as.data.frame(orcSIM_Poisson$fitted.values) %>%
  round(digits = 0)

inter_zonal_flow <- inter_zonal_flow %>%
  cbind(df) %>%
  rename(orcTRIPS = "orcSIM_Poisson.fitted.values")
```


## Doubly Constrained Model

```{r}
df <- as.data.frame(dbcSIM_Poisson$fitted.values) %>%
  round(digits = 0)

inter_zonal_flow <- inter_zonal_flow %>%
  cbind(df) %>%
  rename(dbcTRIPS = "dbcSIM_Poisson.fitted.values")
```


:::

Plot the observed values and the fitted values.


```{r}
orc_p <- ggplot(data = inter_zonal_flow,
                aes(x = orcTRIPS,
                    y = MORNING_PEAK)) +
  geom_point(size = 1, colour = "lightblue") +
  geom_smooth(method = lm) +
  coord_cartesian(xlim=c(0,150000),
                  ylim=c(0,150000)) + 
  theme(
    panel.background = element_blank()
  )

dbc_p <- ggplot(data = inter_zonal_flow,
                aes(x = dbcTRIPS,
                    y = MORNING_PEAK)) +
  geom_point(size = 1, colour = "lightblue") +
  geom_smooth(method = lm) +
  coord_cartesian(xlim=c(0,150000),
                  ylim=c(0,150000)) +
  theme(
    panel.background = element_blank()
  )

ggarrange(orc_p, dbc_p,
          ncol = 2,
          nrow = 1)
```

