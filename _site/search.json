[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS624_Geospatial_Analytics",
    "section": "",
    "text": "Welcome to ISSS624 AY2023!\nThis page documents my learning journey of geospatial analytics.\nMac User Journey\n\nInstall R studio\nInstall git\nSeveral packages requires Rtools and works under Windows. To resolve, type the following codes in console:\na) install.packages(“remotes”)\nb) remotes::install_github(“rmacoslib/macrtools”)\nc) install.packages(“httr2”)\nNote: httr2 is a package that provides tools for creating and modifying HTTP requests, then performing them and processing the results. ‘httr2’ is a modern re-imagining of ‘httr’ that uses a pipe-based interface and solves more of the problems that API wrapping packages face.\nSet up git by typing usethis::use_git() in console. When prompted “Is it ok to commit them?”, selection “Not now”. You will observe an icon GI+ appeared in toolbar menu.\nCreate a github token through the following codes in console:\na) install.packages(c(“gh”, “gitcreds”))\nb) usethis::create_github_token()\nc) gitcreds::gitcreds_set() and enter your token\nd) gh::gh_whoami()\nSet up new github repository for the project by typing usethis::use_github() in console.\nPublish webpage through Netlify: https://www.netlify.com.\na) Sign up through Github account.\nb) Add a new site and indicate _site in Publish directory.\nc) Deploy site."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Handson_Ex/Handson_Ex01/Handson_Ex01.html",
    "href": "Handson_Ex/Handson_Ex01/Handson_Ex01.html",
    "title": "1 Geospatial Data Wrangling with R",
    "section": "",
    "text": "This is the first hands-on exercise."
  },
  {
    "objectID": "Handson_Ex/Handson_Ex01/Handson_Ex01.html#overview",
    "href": "Handson_Ex/Handson_Ex01/Handson_Ex01.html#overview",
    "title": "1 Geospatial Data Wrangling with R",
    "section": "",
    "text": "This is the first hands-on exercise."
  },
  {
    "objectID": "Handson_Ex/Handson_Ex01/Handson_Ex01.html#load-packages",
    "href": "Handson_Ex/Handson_Ex01/Handson_Ex01.html#load-packages",
    "title": "1 Geospatial Data Wrangling with R",
    "section": "1.2 Load packages",
    "text": "1.2 Load packages\n\npacman::p_load(sf, tidyverse)"
  },
  {
    "objectID": "Handson_Ex/Handson_Ex01/Handson_Ex01.html#import-geospatial-data",
    "href": "Handson_Ex/Handson_Ex01/Handson_Ex01.html#import-geospatial-data",
    "title": "1 Geospatial Data Wrangling with R",
    "section": "1.3 Import geospatial data",
    "text": "1.3 Import geospatial data\n\nmpsz = st_read(dsn=\"data/geospatial\", layer=\"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `/Users/chockwankee/Documents/chockwk/ISSS624_Geospatial_Analytics/Handson_Ex/Handson_Ex01/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21"
  },
  {
    "objectID": "Hands_on_Ex/Hands_on_Ex01/Hands_on_Ex01.html",
    "href": "Hands_on_Ex/Hands_on_Ex01/Hands_on_Ex01.html",
    "title": "1 Geospatial Data Wrangling with R",
    "section": "",
    "text": "In this Hands_on_Ex01, we will handle geospatial data in R using two packages, namely tidyverse and sf.\nLearning Objectives:\n\nxx\nxx"
  },
  {
    "objectID": "Hands_on_Ex/Hands_on_Ex01/Hands_on_Ex01.html#overview",
    "href": "Hands_on_Ex/Hands_on_Ex01/Hands_on_Ex01.html#overview",
    "title": "1 Geospatial Data Wrangling with R",
    "section": "",
    "text": "In this Hands_on_Ex01, we will handle geospatial data in R using two packages, namely tidyverse and sf.\nLearning Objectives:\n\nxx\nxx"
  },
  {
    "objectID": "Hands_on_Ex/Hands_on_Ex01/Hands_on_Ex01.html#load-packages",
    "href": "Hands_on_Ex/Hands_on_Ex01/Hands_on_Ex01.html#load-packages",
    "title": "1 Geospatial Data Wrangling with R",
    "section": "1.2 Load packages",
    "text": "1.2 Load packages\nTidyverse contains and installs a number of packages commonly used in data analysis, such as ggplot2 to create declarative graphics, dplyr to manipulate data, tidyr to organize data in a consistent form, readr to parse rectangular data, and other packages. More information can be found here.\nsf provides a set of tools and a standardized way to encode geospatial vectors in the form of points, lines, polygons, etc. It binds to GDAL to read and write data, GEOS for geometrical operations, and PROJ for projection conversions and datum transformations. More information can be found here.\n\npacman::p_load(sf, tidyverse)"
  },
  {
    "objectID": "Hands_on_Ex/Hands_on_Ex01/Hands_on_Ex01.html#import-geospatial-data",
    "href": "Hands_on_Ex/Hands_on_Ex01/Hands_on_Ex01.html#import-geospatial-data",
    "title": "1 Geospatial Data Wrangling with R",
    "section": "1.3 Import geospatial data",
    "text": "1.3 Import geospatial data\nBefore we begin, let’s understand the geospatial file formats. KML, SHP, and GeoJSON are file formats commonly used in Geographic Information System (GIS) and mapping applications to represent and store geospatial data. Each format serves a specific purpose and has its own characteristics.\n\nKML (Keyhole Markup Language) is an XML-based file format developed for use with Google Earth. It is widely supported by various GIS and mapping software. KML files can contain a variety of geospatial data, including points, lines, polygons, images, and text annotations.\nSHP (Shapefile) is a widely used industry-standard geospatial vector data format used by GIS softwares, such as ESRI ArcGIS and QGIS. Shapefiles consist of multiple files with different extensions (.shp, .shx, .dbf, etc.) that together represent vector features, including points, lines, and polygons. Shapefiles are versatile and support for attribute data, making them suitable for a wide range of GIS applications.\nGeoJSON (Geographic JavaScript Object Notation) is an open and lightweight format for encoding geospatial data in a JSON (JavaScript Object Notation) format. It is easy for both humans and machines to read and write. GeoJSON supports various types of geospatial features, including points, lines, polygons, and multi-geometry collections. It is commonly used in web mapping applications and can be easily integrated with JavaScript and other programming languages. GeoJSON is a format for encoding a variety of geographic data structures.\n\nNext, we have three geospatial datasets in various data file formats.\nDataset 1: Master Plan 2014 Subzone Boundary (mpsz)\nThe Master Plan is a forward looking guiding plan for Singapore’s development in the medium term over the next 10 to 15 years. To facilitate urban planning, the Urban Redevelopment Authority (URA) divides Singapore into regions, planning areas and subzones. Subzones are divisions within a planning area which are usually centred around a focal point such as neighbourhood centre or activity node.\nSource: URA (Download here)\n\n\nmpsz = st_read(dsn=\"data/geospatial\", layer=\"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `/Users/chockwankee/Documents/chockwk/ISSS624_Geospatial_Analytics/Hands_on_Ex/Hands_on_Ex01/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\nThe output indicates that the geospatial objects are multipolygon features. There are 323 features and 15 fields. It is in svy21 projected coordinates system with XY dimension.\nDataset 2: Pre-schools Location (preschool)\nThe data contains the location of pre-schools, including childcare centres and kindergartens, in Singapore.\nSource: ECDA (Download here)\n\n\npreschool = st_read(\"data/geospatial/PreSchoolsLocation.kml\")\n\nReading layer `PRESCHOOLS_LOCATION' from data source \n  `/Users/chockwankee/Documents/chockwk/ISSS624_Geospatial_Analytics/Hands_on_Ex/Hands_on_Ex01/data/geospatial/PreSchoolsLocation.kml' \n  using driver `KML'\nSimple feature collection with 2290 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\nThe output indicates that the geospatial objects are point features. There are 2290 features and 2 fields. It is in wgs84 projected coordinates system with XYZ dimension.\nDataset 3: Cycling Path (cyclingpath)\nThe data contains an intra-town path designated for cyclists represented by line. Note the data excludes park connectors.\nSource: LTA (Download here)\n\n\ncyclingpath = st_read(dsn=\"data/geospatial\", layer=\"CyclingPathGazette\")\n\nReading layer `CyclingPathGazette' from data source \n  `/Users/chockwankee/Documents/chockwk/ISSS624_Geospatial_Analytics/Hands_on_Ex/Hands_on_Ex01/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 2558 features and 2 fields\nGeometry type: MULTILINESTRING\nDimension:     XY\nBounding box:  xmin: 11854.32 ymin: 28347.98 xmax: 42626.09 ymax: 48948.15\nProjected CRS: SVY21\n\n\nThe output indicates that the geospatial objects are multilinestring features. There are 2558 features and 2 fields. It is in svy21 projected coordinates system with XY dimension."
  },
  {
    "objectID": "Hands_on_Ex/Hands_on_Ex01/Hands_on_Ex01.html#explore-data",
    "href": "Hands_on_Ex/Hands_on_Ex01/Hands_on_Ex01.html#explore-data",
    "title": "1 Geospatial Data Wrangling with R",
    "section": "1.4 Explore data",
    "text": "1.4 Explore data"
  }
]