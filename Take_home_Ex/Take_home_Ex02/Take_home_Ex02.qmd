---
title: "Applied Spatial Interaction Models"
author: "Wan Kee"
date: "4 December 2023"
date modified: "13 December 2023"
format: html
execute: 
  echo: true
  eval: true
  warning: false
editor: source
---

# **A case study of Singapore public bus commuter flows**

# 1. Overview

Urban mobility and public transport service planning are critical challenges for transport operators and urban planners. Questions on the residents commute patterns and the bus service demands are traditionally explored through commuter surveys. Despite providing valuable insights, these surveys are costly, time-consuming, and the data require extensive cleaning and analysis, often rendering the findings outdated by the time they are ready for use.

In contrast, the digitization of urban infrastructure, such as public buses, trains, and roads, offers a wealth of data that can capture movement patterns over time and space. The advent of pervasive computing technologies like GPS and smart cards for transport has led to an explosion of geospatial data. However, the capability to effectively analyze this data and extract valuable information is not in the same pace, leading to suboptimal returns on investment in data collection and management.

This exercise is propelled by two key motivators: the under utilization of the increasing volumes of open data for policy-making, and the scarcity of practical research demonstrating the use of geospatial data science and analysis (GDSA) in decision-making processes.

# 2. Task

**Geospatial Data Science**

1.  Derive an analytical hexagon data of 375m to represent the traffic analysis zone.
2.  Construct an OD matrix of commuter flows for the following time intervals:

    a.  Weekday morning peak from 6am to 9am
    b.  Weekday evening peak from 5pm to 8pm
    c.  Weekend/holiday morning peak from 11am to 2pm
    d.  Weekend/holiday evening peak from 4pm to 7pm
    
3.  Display the O-D flows of the passenger trips by using appropriate geovisualisation methods.
4.  Describe the spatial patterns revealed by the geovisualisation.
5.  Assemble at least three propulsive and three attractiveness variables by using aspatial and geospatial from publicly available sources.
6.  Compute a distance matrix by using the analytical hexagon data.

**Spatial Interaction Modelling**

1.  Calibrate spatial interactive models to determine factors affecting urban commuting flows at the selected time interval.

2.  Present the modelling results by using appropriate geovisualisation and graphical visualisation methods.

3.  With reference to the Spatial Interaction Model output tables, maps and data visualisation prepared, describe the modelling results.

# 2. Load packages

The analysis involves the following packages:

`sf` handles spatial data.
`tidyverse` handles attribute data.
`DT` enables R data objects (matrices or data frames) to be displayed as tables on HTML pages.
`stplanr` analyses OD matrix.
`reshape2` restructures and aggregates data. 
`performance` contains utilities for computing measures to assess model quality. 
`ggpubr` arrange and annotate multiple plots.
`olsrr` builds OLS and performing diagnostics tests.
`GWmodel` calibrate geographical weighted family of models.
`corrplot` enables multivariate data visualisation and analysis.
`tmap` plots choropleth maps.

```{r}
pacman::p_load(tmap, sf, sp, DT, stplanr, tidyverse, reshape2, performance, ggpubr, olsrr, corrplot, GWmodel, gtsummary)
```

# 3. Import data

We will be using the following **geospatial** (`busstop`, `mpsz`) and **aspatial** (`odbus`) datasets.

:::panel-tabset


## Bus Stop

`busstop` is a **geospatial** dataset containing the detailed information for all bus stops currently serviced by buses, including bus stop code, road name, description, location coordinates.

The output indicates that the geospatial objects are **point** features. There are **5161 features** and 3 fields. It is in **SVY21** projected coordinates system with **XY** dimension.

Source: LTA DataMall ([Postman URL](http://datamall2.mytransport.sg/ltaodataservice/BusStops))

```{r}
busstop <- st_read(dsn = "data/geospatial", layer = "BusStop") %>%
  st_transform(crs = 3414)

glimpse(busstop)
```

## Subzone

`mpsz` is is a **geospatial** dataset of the Master Plan 2019, a forward looking guiding plan for Singapore's development in the medium term over the next 10 to 15 years published in **2019**. 

The output indicates that the geospatial objects are **multipolygon** features. There are **332 features** and 6 fields. It is in **WGS84** projected coordinates system with **XY** dimension.

Source: URA (Download [here](https://beta.data.gov.sg/collections/1749/view))

```{r}
mpsz <- st_read(dsn = "data/geospatial", layer = "MPSZ-2019") %>% 
  st_transform(crs=3414)
glimpse(mpsz)
```

## Bus Stop in Subzones

```{r}
busstop_mpsz <- st_intersection(busstop, mpsz) %>%
  select(BUS_STOP_N, SUBZONE_C) 

glimpse(busstop_mpsz)
```

## Passenger Volume

`odbus` is an **aspatial** dataset containing the number of trips by weekdays and weekends from origin to destination bus stops. It reflects the passenger trip traffic and the most recent dataset from **October 2023** will be used. 

The output indicates **5,694,297 records** and 7 fields. The bus stop codes are converted into factor for data handling.

Source: LTA DataMall ([Postman URL](http://datamall2.mytransport.sg/ltaodataservice/PV/ODBus))

```{r}
odbus = read_csv("data/aspatial/origin_destination_bus_202310.csv")

glimpse(odbus)
```

## Passenger Volume by Bus Stop

```{r}
# odbusstop <- read_rds("data/rds/odbusstop.rds")
# glimpse(odbusstop)
```

:::

# 4. Extract Commuting Flow

::: panel-tabset

```{r}
odbus$ORIGIN_PT_CODE <- as.factor(odbus$ORIGIN_PT_CODE)
odbus$DESTINATION_PT_CODE <- as.factor(odbus$DESTINATION_PT_CODE)
```

## Weekday Morning Peak

```{r}
odbus6_9 <- odbus %>%
  filter(DAY_TYPE == "WEEKDAY") %>%
  filter(TIME_PER_HOUR >= 6 & TIME_PER_HOUR <= 9) %>%
  group_by(ORIGIN_PT_CODE, DESTINATION_PT_CODE) %>%
  summarise(TRIPS = sum(TOTAL_TRIPS))

glimpse(odbus6_9)
```

## Weekday Evening Peak

```{r}
odbus17_20 <- odbus %>%
  filter(DAY_TYPE == "WEEKDAY") %>%
  filter(TIME_PER_HOUR >= 17 & TIME_PER_HOUR <= 20) %>%
  group_by(ORIGIN_PT_CODE, DESTINATION_PT_CODE) %>%
  summarise(TRIPS = sum(TOTAL_TRIPS))
```

## Weekend Morning Peak

```{r}
odbus11_14 <- odbus %>%
  filter(DAY_TYPE == "WEEKENDS/HOLIDAY") %>%
  filter(TIME_PER_HOUR >= 11 & TIME_PER_HOUR <= 14) %>%
  group_by(ORIGIN_PT_CODE, DESTINATION_PT_CODE) %>%
  summarise(TRIPS = sum(TOTAL_TRIPS))
```

## Weekend Evening Peak

```{r}
odbus16_19 <- odbus %>%
  filter(DAY_TYPE == "WEEKENDS/HOLIDAY") %>%
  filter(TIME_PER_HOUR >= 16 & TIME_PER_HOUR <= 19) %>%
  group_by(ORIGIN_PT_CODE, DESTINATION_PT_CODE) %>%
  summarise(TRIPS = sum(TOTAL_TRIPS))
```
:::

# 4. Create Spatial Grids

::: panel-tabset

## Step 1

```{r}
area_hexagon_grid <- st_make_grid(busstop_mpsz, 
                                  cellsize = 750, 
                                  crs = 3414,
                                  what = "polygons",
                                  square = FALSE)
area_hexagon_grid
```

## Step 2

```{r}
hexagon_grid_sf = st_sf(area_hexagon_grid) %>% 
  mutate(INDEX = row_number()) %>% 
  rename(geometry = area_hexagon_grid,
         index = INDEX)

glimpse(hexagon_grid_sf)
```

## Step 3

```{r}
hexagon_busstop <- st_join(hexagon_grid_sf, busstop, 
                           by = c("geometry" = "geometry")) %>% 
  drop_na()
glimpse(hexagon_busstop)
```


```{r}
od <- st_join(hexagon_grid_sf, busstop_mpsz, 
            by = c("geometry" = "geometry"))
glimpse(od)
```

# 5. Prepare OD Matrix

```{r}
od1 <- left_join(odbus6_9, od,
                 by = c("ORIGIN_PT_CODE" = "BUS_STOP_N")) %>% 
  rename(ORIGIN_BS = ORIGIN_PT_CODE,
         DESTIN_BS = DESTINATION_PT_CODE,
         ORIGIN_SZ = SUBZONE_C)

od1$ORIGIN_BS <- as.factor(od1$ORIGIN_BS)

glimpse(od1)
```
```{r}
duplicate <- od1 %>%
  group_by_all() %>%
  filter(n()>1) %>%
  ungroup()

od1 <- unique(od1)

glimpse(od1)
```


```{r}
od1 <- left_join(od1, od,
                 by = c("DESTIN_BS" = "BUS_STOP_N")) %>%
  rename(DESTIN_SZ = SUBZONE_C,
         ORIGIN_INDEX = index.x,
         ORIGIN_GEOMETRY = geometry.x, 
         DESTIN_INDEX = index.y,
         DESTIN_GEOMETRY = geometry.y) %>% 
  drop_na() %>%
  group_by(ORIGIN_SZ, DESTIN_SZ)

od1$DESTIN_BS <- as.factor(od1$DESTIN_BS)

glimpse(od1)
```

```{r}
duplicate <- od1 %>%
  group_by_all() %>%
  filter(n()>1) %>%
  ungroup()

od1 <- unique(od1)

glimpse(od1)
```

```{r}
od1 <- od1[od1$ORIGIN_SZ!=od1$DESTIN_SZ,]
head(od1)
```
```{r}
od1_data <- od1 %>%
  drop_na() %>%
  group_by(ORIGIN_INDEX, DESTIN_INDEX) %>%
  summarise(MORNING_PEAK = sum(TRIPS))
glimpse(od1_data)
```

:::

```{r}
flowLine <- od1_data %>% 
  od2line(od, zone_code = "index")
```

```{r}
tmap_mode("plot")

# Plot the base layer with mpsz areas filled with colors based on PLN_AREA_N
tm_shape(mpsz) +
  tm_polygons(col = "REGION_N", palette = "Set2") +
  
  tm_shape(hexagon_busstop) +
  tm_polygons(col = "white", alpha = 0.1) +
  
  flowLine %>%
  filter(MORNING_PEAK >= 10000) %>%
  tm_shape() +
  tm_lines(lwd = "MORNING_PEAK", style = "quantile",
           scale = c(0.1, 1, 3, 5, 7, 10), n = 6, alpha = 1) +
  
  tm_layout(main.title = "Weekday Morning Peak Flow by Region",
            main.title.position = "center",
            main.title.size = 1,
            legend.position = c("right", "bottom"),
            legend.outside = FALSE,
            legend.text.size = 0.6,
            frame = FALSE)

```


```{r}
tmap_mode("plot")

tm_shape(mpsz) +
  tm_polygons(col = "PLN_AREA_N", palette = "Set3") +
  
  tm_shape(hexagon_busstop) +
  tm_polygons(col = "white", alpha = 0.1) +
  
  flowLine %>%
  filter(MORNING_PEAK >= 10000) %>%
  tm_shape() +
  tm_lines(lwd = "MORNING_PEAK", style = "quantile",
           scale = c(0.1, 1, 3, 5, 7, 10), n = 6, alpha = 1) +
  
  tm_layout(main.title = "Weekday Morning Peak Flow by Planning Area",
            main.title.position = "center",
            main.title.size = 1,
            legend.show = FALSE,
            frame = FALSE)
```

